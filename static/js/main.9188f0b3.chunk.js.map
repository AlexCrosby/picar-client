{"version":3,"sources":["components/socket.js","components/controls.js","components/gamepad.js","components/signalling.js","components/stream.js","App.js","reportWebVitals.js","index.js"],"names":["socket","ConnectToCar","setState","socketIOClient","transports","on","data","console","log","KeyHandler","setKey","onKeyUp","e","k","key","toUpperCase","includes","message","emit","onKeyDown","repeat","value","window","addEventListener","removeEventListener","Gpad","gamepadIndex","buttonName","down","axisName","previousValue","onConnect","this","connectHandler","onDisconnect","disconnectHandler","onButtonChange","buttonChangeHandler","onAxisChange","axisChangeHandler","Fragment","React","Component","signal","url","onStream","onError","onClose","onMessage","pc","ws","WebSocket","iceCandidates","hasRemoteDesc","addIceCandidates","forEach","candidate","addIceCandidate","JSON","stringify","error","onopen","RTCPeerConnection","optional","onicecandidate","event","sdpMLineIndex","sdpMid","request","what","send","ontrack","track","kind","streams","onaddstream","stream","onremovestream","ondatachannel","options","force_hw_vcodec","vformat","trickle_ice","onmessage","evt","msg","parse","mediaConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","setRemoteDescription","RTCSessionDescription","createAnswer","sessionDescription","setLocalDescription","close","elt","RTCIceCandidate","push","candidates","i","length","onclose","code","onerror","hangup","Stream","signalObj","isStreaming","video","document","getElementById","id","onClick","wsurl","location","protocol","srcObject","play","alert","startStream","title","controls","width","height","App","useState","state","useEffect","deadZone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","StrictMode"],"mappings":"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","file":"static/js/main.9188f0b3.chunk.js","sourcesContent":["import socketIOClient from 'socket.io-client';\r\n\r\nlet socket = null\r\nfunction ConnectToCar(setState) {\r\n\r\n    socket = socketIOClient(\"http://picar1.duckdns.org:5000\",{\r\n        transports: [\"websocket\"]});\r\n    socket.on(\"status\", data => {\r\n        //setResponse(data);\r\n    });\r\n    socket.on(\"connect\", data => {\r\n        setState(\"Connected\")\r\n        console.log(\"Connected to piCar.\")\r\n\r\n    });\r\n    socket.on(\"disconnect\", data => {\r\n        setState(\"Disconnected\")\r\n        console.log(\"Disconnected to piCar.\")\r\n\r\n    });\r\n    return socket\r\n}\r\n\r\nexport default ConnectToCar;\r\nexport {socket}","import {useState} from 'react';\r\n\r\n\r\nfunction KeyHandler(setKey, socket) {\r\n\r\n\r\n    function onKeyUp(e) {\r\n        let k = e.key.toUpperCase()\r\n        if (['W', 'A', 'S', 'D'].includes(k)) {\r\n            var message = {['Key' + k]: 0}\r\n            socket.emit('command', message)\r\n\r\n            setKey(k);\r\n        }\r\n    }\r\n\r\n    function onKeyDown(e) {\r\n        let k = e.key.toUpperCase()\r\n        if (e.repeat) return;\r\n        if (['W', 'A', 'S', 'D'].includes(k)) {\r\n            var value = (['W', 'S'].includes(k))?0.5:1\r\n            var message = {['Key' + k]: value}\r\n            socket.emit('command', message)\r\n\r\n            setKey(k);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    window.addEventListener('keyup', onKeyUp);\r\n    window.addEventListener('keydown', onKeyDown);\r\n    return () => {\r\n        window.removeEventListener('keyup', onKeyUp);\r\n        window.removeEventListener('keydown', onKeyDown);\r\n    }\r\n}\r\n\r\nexport default KeyHandler;","import Gamepad from 'react-gamepad'\r\nimport React from 'react';\r\nimport {socket} from \"./socket\";\r\n\r\nclass Gpad extends React.Component {\r\n    connectHandler(gamepadIndex) {\r\n        console.log(`Gamepad ${gamepadIndex} connected !`)\r\n    }\r\n\r\n    disconnectHandler(gamepadIndex) {\r\n        console.log(`Gamepad ${gamepadIndex} disconnected !`)\r\n    }\r\n\r\n    buttonChangeHandler(buttonName, down) {\r\n        if (buttonName in ['']) {\r\n            console.log(buttonName, down)\r\n        }\r\n    }\r\n\r\n    axisChangeHandler(axisName, value, previousValue) {\r\n        if (['LeftStickX', 'LeftTrigger','RightTrigger'].includes(axisName)) {\r\n            console.log(axisName, value)\r\n            socket.emit('command', {[axisName]:value})\r\n        }\r\n\r\n\r\n    }\r\n\r\n    buttonDownHandler(buttonName) {\r\n        console.log(buttonName, 'down')\r\n    }\r\n\r\n    buttonUpHandler(buttonName) {\r\n        console.log(buttonName, 'up')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Gamepad Stuff</h2>\r\n                <Gamepad\r\n                    onConnect={this.connectHandler}\r\n                    onDisconnect={this.disconnectHandler}\r\n\r\n                    onButtonChange={this.buttonChangeHandler}\r\n                    onAxisChange={this.axisChangeHandler}\r\n                >\r\n                    <React.Fragment/>\r\n                </Gamepad>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Gpad","/*\r\n * window.mozRTCPeerConnection, window.mozRTCSessionDescription, window.mozRTCIceCandidate are now deprecated\r\n */\r\n\r\n\r\n\r\nfunction signal(url, onStream, onError, onClose, onMessage) {\r\n// RTCPeerConnection = window.RTCPeerConnection || /*window.mozRTCPeerConnection ||*/ window.webkitRTCPeerConnection;\r\n// RTCSessionDescription = /*window.mozRTCSessionDescription ||*/ window.RTCSessionDescription;\r\n// RTCIceCandidate = /*window.mozRTCIceCandidate ||*/ window.RTCIceCandidate;\r\n    if (\"WebSocket\" in window) {\r\n        console.log(\"opening web socket: \" + url);\r\n        var ws = new WebSocket(url);\r\n        var pc;\r\n        var iceCandidates = [];\r\n        var hasRemoteDesc = false;\r\n\r\n        function addIceCandidates() {\r\n            if (hasRemoteDesc) {\r\n                iceCandidates.forEach(function (candidate) {\r\n                    pc.addIceCandidate(candidate,\r\n                        function () {\r\n                            console.log(\"IceCandidate added: \" + JSON.stringify(candidate));\r\n                        },\r\n                        function (error) {\r\n                            console.error(\"addIceCandidate error: \" + error);\r\n                        }\r\n                    );\r\n                });\r\n                iceCandidates = [];\r\n            }\r\n        }\r\n\r\n        ws.onopen = function () {\r\n            /* First we create a peer connection */\r\n            var config = {\"iceServers\": [{\"urls\": [\"stun:stun.l.google.com:19302\",\"stun:192.168.1.94:3478\"]}]};\r\n            var options = {optional: []};\r\n            pc = new RTCPeerConnection(config, options);\r\n            iceCandidates = [];\r\n            hasRemoteDesc = false;\r\n\r\n            pc.onicecandidate = function (event) {\r\n                if (event.candidate) {\r\n                    var candidate = {\r\n                        sdpMLineIndex: event.candidate.sdpMLineIndex,\r\n                        sdpMid: event.candidate.sdpMid,\r\n                        candidate: event.candidate.candidate\r\n                    };\r\n                    var request = {\r\n                        what: \"addIceCandidate\",\r\n                        data: JSON.stringify(candidate)\r\n                    };\r\n                    ws.send(JSON.stringify(request));\r\n                } else {\r\n                    console.log(\"end of candidates.\");\r\n                }\r\n            };\r\n\r\n            if ('ontrack' in pc) {\r\n                pc.ontrack = function (event) {\r\n                    console.log('pc.ontrack', event);       // <-- new line\r\n                    if (event.track.kind === 'video') {     // <-- new line\r\n                        onStream(event.streams[0]);\r\n                    }                                       // <-- new line\r\n                };\r\n            } else {  // onaddstream() deprecated\r\n                pc.onaddstream = function (event) {\r\n                    onStream(event.stream);\r\n                };\r\n            }\r\n\r\n            pc.onremovestream = function (event) {\r\n                console.log(\"the stream has been removed: do your stuff now\");\r\n            };\r\n\r\n            pc.ondatachannel = function (event) {\r\n                console.log(\"a data channel is available: do your stuff with it\");\r\n                // For an example, see https://www.linux-projects.org/uv4l/tutorials/webrtc-data-channels/\r\n            };\r\n\r\n            /* kindly signal the remote peer that we would like to initiate a call */\r\n            var request = {\r\n                what: \"call\",\r\n                options: {\r\n                    // If forced, the hardware codec depends on the arch.\r\n                    // (e.g. it's H264 on the Raspberry Pi)\r\n                    // Make sure the browser supports the codec too.\r\n                    force_hw_vcodec: false,\r\n                    vformat: 30, /* 30=640x480, 30 fps */\r\n                    trickle_ice: true\r\n                }\r\n            };\r\n            console.log(\"send message \" + JSON.stringify(request));\r\n            ws.send(JSON.stringify(request));\r\n        };\r\n\r\n        ws.onmessage = function (evt) {\r\n            var msg = JSON.parse(evt.data);\r\n            var what = msg.what;\r\n            var data = msg.data;\r\n\r\n            console.log(\"received message \" + JSON.stringify(msg));\r\n\r\n            switch (what) {\r\n                case \"offer\":\r\n                    var mediaConstraints = {\r\n                        optional: [],\r\n                        mandatory: {\r\n                            OfferToReceiveAudio: true,\r\n                            OfferToReceiveVideo: true\r\n                        }\r\n                    };\r\n                    pc.setRemoteDescription(new RTCSessionDescription(JSON.parse(data)),\r\n                        function onRemoteSdpSuccess() {\r\n                            hasRemoteDesc = true;\r\n                            addIceCandidates();\r\n                            pc.createAnswer(function (sessionDescription) {\r\n                                pc.setLocalDescription(sessionDescription);\r\n                                var request = {\r\n                                    what: \"answer\",\r\n                                    data: JSON.stringify(sessionDescription)\r\n                                };\r\n                                ws.send(JSON.stringify(request));\r\n                            }, function (error) {\r\n                                onError(\"failed to create answer: \" + error);\r\n                            }, mediaConstraints);\r\n                        },\r\n                        function onRemoteSdpError(event) {\r\n                            onError('failed to set the remote description: ' + event);\r\n                            ws.close();\r\n                        }\r\n                    );\r\n\r\n                    break;\r\n\r\n                case \"answer\":\r\n                    break;\r\n\r\n                case \"message\":\r\n                    if (onMessage) {\r\n                        onMessage(msg.data);\r\n                    }\r\n                    break;\r\n\r\n                case \"iceCandidate\": // received when trickle ice is used (see the \"call\" request)\r\n                    if (!msg.data) {\r\n                        console.log(\"Ice Gathering Complete\");\r\n                        break;\r\n                    }\r\n                    var elt = JSON.parse(msg.data);\r\n                    let candidate = new RTCIceCandidate({sdpMLineIndex: elt.sdpMLineIndex, candidate: elt.candidate});\r\n                    iceCandidates.push(candidate);\r\n                    addIceCandidates(); // it internally checks if the remote description has been set\r\n                    break;\r\n\r\n                case \"iceCandidates\": // received when trickle ice is NOT used (see the \"call\" request)\r\n                    var candidates = JSON.parse(msg.data);\r\n                    for (var i = 0; candidates && i < candidates.length; i++) {\r\n                        var elt = candidates[i];\r\n                        let candidate = new RTCIceCandidate({sdpMLineIndex: elt.sdpMLineIndex, candidate: elt.candidate});\r\n                        iceCandidates.push(candidate);\r\n                    }\r\n                    addIceCandidates();\r\n                    break;\r\n            }\r\n        };\r\n\r\n        ws.onclose = function (event) {\r\n            console.log('socket closed with code: ' + event.code);\r\n            if (pc) {\r\n                pc.close();\r\n                pc = null;\r\n                ws = null;\r\n            }\r\n            if (onClose) {\r\n                onClose();\r\n            }\r\n        };\r\n\r\n        ws.onerror = function (event) {\r\n            onError(\"An error has occurred on the websocket (make sure the address is correct)!\");\r\n        };\r\n\r\n        this.hangup = function() {\r\n            if (ws) {\r\n                var request = {\r\n                    what: \"hangup\"\r\n                };\r\n                console.log(\"send message \" + JSON.stringify(request));\r\n                ws.send(JSON.stringify(request));\r\n            }\r\n        };\r\n\r\n    } else {\r\n        onError(\"Sorry, this browser does not support Web Sockets. Bye.\");\r\n    }\r\n}\r\nexport default signal","import signal from \"./signalling\";\r\nimport React from \"react\";\r\n\r\nfunction Stream() {\r\n    let signalObj = null;\r\n    let isStreaming = false;\r\n\r\n    let video = document.getElementById('v');\r\n\r\n    let start = document.getElementById('start');\r\n    let stop = document.getElementById('stop');\r\n    window.addEventListener('DOMContentLoaded', function () {\r\n        video = document.getElementById('v');\r\n        start = document.getElementById('start');\r\n        stop = document.getElementById('stop');\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    let startStream = () => {\r\n\r\n        var address = 'picar1.duckdns.org:8090/stream/webrtc'\r\n        var protocol = window.location.protocol === \"https:\" ? \"https:\" : \"https:\";\r\n        var wsurl = protocol + '//' + address;\r\n\r\n        if (!isStreaming) {\r\n            console.log(\"create new signal\")\r\n            signalObj = new signal(wsurl,\r\n                function (stream) {\r\n                    console.log('got a stream!');\r\n\r\n                    video.srcObject = stream;\r\n                    video.play();\r\n                },\r\n                function (error) {\r\n                    alert(error);\r\n                },\r\n                function () {\r\n                    console.log('websocket closed. bye bye!');\r\n                    video.srcObject = null;\r\n\r\n                    isStreaming = false;\r\n                },\r\n                function (message) {\r\n                    alert(message);\r\n                }\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    let stopStream = ()=>{\r\n        console.log(\"signalObj\" + signalObj)\r\n        if (signalObj) {\r\n            console.log(\"STOP\")\r\n            signalObj.hangup();\r\n            signalObj = null;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button id='start' onClick={()=>startStream()\r\n                }\r\n                        title=\"If you do not see any video stream, make sure your browser supports the codec used within this demo (see the source code for details, or try Firefox or Chrome)\">\r\n                    Start Streaming\r\n                </button>\r\n                <button id='stop'\r\n                        onClick={()=>stopStream()}>Stop Streaming</button>\r\n            </div>\r\n            <video  id='v' controls width={640} height={480}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stream","import './App.css';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport ConnectToCar from \"./components/socket\";\r\nimport KeyHandler from \"./components/controls\";\r\nimport Gpad from  \"./components/gamepad\";\r\nimport Stream from \"./components/stream\";\r\nfunction App() {\r\n    // window.addEventListener('keydown', (event) => {\r\n    //     console.log(\"THIS LISTENER WORKS\")\r\n    // });\r\n\r\n\r\n    const [state, setState] = useState(\"Init\");\r\n    const [key, setKey] = useState(\"None\")\r\n    let socket = null\r\n\r\n\r\n    useEffect(() => {\r\n        socket = ConnectToCar(setState);\r\n        KeyHandler(setKey, socket)\r\n        }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Car Stream</h1>\r\n            <>Status: {state}</>\r\n            <br/>\r\n            <>Last key pressed: {key}</>\r\n            <div>\r\n                <Stream />\r\n            </div>\r\n            <Gpad deadZone={0.1}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n    </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}